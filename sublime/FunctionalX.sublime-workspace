{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"test_",
				"test_directory"
			],
			[
				"subm",
				"submodule_name"
			],
			[
				"function",
				"function_names"
			],
			[
				"ta",
				"target_module_name"
			],
			[
				"da",
				"dashed_line"
			],
			[
				"list",
				"list_of_items"
			],
			[
				"lis",
				"list_of_items"
			],
			[
				"collec",
				"collect_coin_tosses"
			],
			[
				"num",
				"number_of_tosses"
			],
			[
				"index",
				"index_list"
			],
			[
				"nu",
				"number_of_tosses"
			],
			[
				"seq",
				"seq_gen"
			],
			[
				"ma",
				"marker_2"
			],
			[
				"mar",
				"marker_2"
			],
			[
				"in",
				"indices"
			],
			[
				"se",
				"seed_array"
			],
			[
				"new",
				"new_index"
			],
			[
				"n",
				"n_max"
			],
			[
				"pred",
				"predictRF"
			],
			[
				"ser",
				"serverAddr"
			],
			[
				"Poin",
				"PointsPredictions"
			],
			[
				"Hi",
				"HighSodium"
			],
			[
				"Li",
				"Literacy"
			],
			[
				"lI",
				"Literacy"
			],
			[
				"WHO",
				"WHO_Europe"
			],
			[
				"test",
				"test_gage_principal_axes"
			],
			[
				"res",
				"residue_array"
			],
			[
				"sys",
				"system_name"
			],
			[
				"residu",
				"residue_dict"
			],
			[
				"Ab",
				"AbstractString"
			],
			[
				"Abs",
				"AbstractFloat"
			],
			[
				"print",
				"print_with_color"
			],
			[
				"an",
				"answer"
			],
			[
				"ans",
				"answer_key"
			],
			[
				"resi",
				"residue_name"
			],
			[
				"syste",
				"system_name"
			],
			[
				"seg",
				"segment_name"
			],
			[
				"dic",
				"dict_key"
			],
			[
				"di",
				"dict_key"
			],
			[
				"k",
				"key_file"
			],
			[
				"outp",
				"output_file"
			],
			[
				"out",
				"output_file"
			],
			[
				"char",
				"charge"
			],
			[
				"for",
				"format_ATOM_RCSB"
			],
			[
				"raw",
				"raw_atom_name"
			],
			[
				"ra",
				"raw_atom_name"
			],
			[
				"file",
				"filed_value_array"
			],
			[
				"format",
				"format_atom_index_RCSB"
			],
			[
				"format_atom",
				"format_atom_index_RCSB"
			],
			[
				"raw_at",
				"raw_atom_name_expr"
			],
			[
				"tmp",
				"tmp_answer"
			],
			[
				"tm",
				"tmp_key"
			],
			[
				"par",
				"parse_ATOM_RCSB"
			],
			[
				"data",
				"data_dir"
			],
			[
				"arg",
				"arg_length"
			],
			[
				"ass",
				"assort_lines_RCSB"
			],
			[
				"free",
				"free_list"
			],
			[
				"read",
				"read_numbers"
			],
			[
				"fir",
				"first"
			],
			[
				"add",
				"add_to_list"
			],
			[
				"first",
				"first_node"
			],
			[
				"day",
				"day_str"
			],
			[
				"nm",
				"num_remind"
			],
			[
				"remin",
				"reminders"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/Users/Steven/DEVELOP/FunctionalX.lua/src/test/test_directory/test_path/test_case.moon",
			"settings":
			{
				"buffer_size": 372,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 246.0,
		"last_filter": "pack",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 162.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Steven/DEVELOP/FunctionalX.lua",
		"/C/Users/Steven/DEVELOP/FunctionalX.lua/src",
		"/C/Users/Steven/DEVELOP/FunctionalX.lua/src/core_FunctionalX",
		"/C/Users/Steven/DEVELOP/FunctionalX.lua/src/test",
		"/C/Users/Steven/DEVELOP/FunctionalX.lua/src/test/test_directory",
		"/C/Users/Steven/DEVELOP/FunctionalX.lua/src/test/test_directory/test_path"
	],
	"file_history":
	[
		"/C/Users/Steven/DEVELOP/Automagical/src/automagical.lua",
		"/C/Users/Steven/DEVELOP/luapower/automagical.lua",
		"/C/Users/Steven/DEVELOP/FunctionalX.lua/release/FunctionalX.lua",
		"/C/Users/Steven/DEVELOP/FunctionalX.lua/src/main.lua",
		"/F/DEVELOP/Automagical/src/automagical.moon",
		"/C/Users/Steven/DEVELOP/FunctionalX.lua/sublime/FunctionalX.sublime-project",
		"/C/Users/Steven/DEVELOP/FunctionalX.lua/src/raw_FunctionalX/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_directory/_path.moon",
		"/F/DEVELOP/FunctionalX.lua/src/PackageToolkit.moon",
		"/F/DEVELOP/FunctionalX.lua/src/tmp.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_strings/test_cart2/test_case.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_strings/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_strings/test_batch_format/init.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_strings/_batch_format.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_strings/test_batch_format/test_case.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_strings/test_batch_format/test_case.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_strings/test_split/init.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_strings/test_split/test_case.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_strings/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_strings/init.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/runtests.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_strings/test_batch_format/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_directory/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_directory/_path.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_directory/init.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_directory/test_path/init.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_lists/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_directory/test_path/test_case.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_directory/test_path/test_case.lua",
		"/F/DEVELOP/FunctionalX.lua/src/PackageToolkit.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_strings/test_cart2/init.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_strings/test_cart2/test_case.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_lists/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_lists/_initial.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_lists/_initial.lua",
		"/F/DEVELOP/cs421su16/practice/combinator.hs",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_strings/_cart2.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_strings/_cartn.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_strings/_cart2.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/_strings/_cartn.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/strings/_all.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/strings/_cartn.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/strings/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/strings/_cart2.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_lists/test_next/init.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/strings/cartn.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/strings/_init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/strings/cart2.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/strings/_all.lua",
		"/F/DEVELOP/FunctionalX.lua/src/A.lua",
		"/F/DEVELOP/FunctionalX.lua/src/B.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_lists/test_next/test_case.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_lists/test_next/test_case.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/FunctionalX.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/strings/split.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/directory/path.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/strings/batch_format.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/cart2.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/formated_strings.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/prepend.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/append.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/merge.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/initial.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/tail.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/concat.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/test_lists/init.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/lists/test_next/test_case.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/lists/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/lists/test_next/init.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/lists/test_next/init.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/next.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/lists/test_next/test_case.lua",
		"/F/DEVELOP/FunctionalX.lua/src/test/lists/next/init.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/lists/test_next.moon",
		"/F/DEVELOP/FunctionalX.lua/src/test/lists/test_next.lua",
		"/F/DEVELOP/FunctionalX.lua/src/runtests.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/head.moon",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/core.lua",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/lists/next.lua",
		"/C/Users/Steven/.bashrc",
		"/F/DEVELOP/FunctionalX.lua/src/FunctionalX/packagetk.lua",
		"/F/DEVELOP/Automagical/README.md",
		"/F/DEVELOP/FunctionalX.py/FunctionalX/src/lists/_cart2.py",
		"/C/Users/Steven/Downloads/LuaJIT-2.0.4/Makefile",
		"/C/Users/Steven/Downloads/LuaJIT-2.0.4/src/Makefile",
		"/C/Users/Steven/hi.moon",
		"/C/Users/Steven/hi.lua",
		"/D/install/luarocks/2.3.0/lua/luarocks/loader.lua",
		"/F/DEVELOP/Automagical/LICENSE",
		"/F/DEVELOP/FunctionalX.lua/LICENSE",
		"/C/Users/Steven/Downloads/LuaJIT-2.0.4/READE",
		"/C/Users/Steven/Downloads/LuaJIT-2.0.4/README",
		"/D/install/luarocks/2.3.0/config-5.1.lua",
		"/I/DEVELOP/stat400/src/hw2/prob.py",
		"/I/DEVELOP/LearnHaskell/src/c4/monad.hs",
		"/I/DEVELOP/LearnHaskell/src/c0/p2.hs",
		"/I/DEVELOP/FunctionalX.py/doc/lists/cart2.rst",
		"/I/DEVELOP/FunctionalX.py/doc/lists/cartn.rst",
		"/I/DEVELOP/FunctionalX.py/doc/lists/cart_append.rst",
		"/I/DEVELOP/FunctionalX.py/doc/lists/toc.rst",
		"/I/DEVELOP/FunctionalX.py/doc/lists/tail.rst",
		"/I/DEVELOP/FunctionalX.py/doc/lists/head.rst",
		"/I/DEVELOP/FunctionalX.py/doc/lists/dict2list.rst",
		"/I/DEVELOP/FunctionalX.py/doc/index.rst",
		"/I/DEVELOP/FunctionalX.py/.gitignore",
		"/I/DEVELOP/FunctionalX.py/doc/conf.py",
		"/I/DEVELOP/FunctionalX.py/doc/make.bat",
		"/I/DEVELOP/FunctionalX.py/setup.py",
		"/I/DEVELOP/FunctionalX.py/FunctionalX/tests/__init__.py",
		"/I/DEVELOP/FunctionalX.py/FunctionalX/tests/lists/__init__.py",
		"/I/DEVELOP/FunctionalX.py/FunctionalX/tests/lists/cart2/__init__.py",
		"/I/DEVELOP/FunctionalX.py/FunctionalX/tests/lists/cart2/test_1.py",
		"/I/DEVELOP/FunctionalX.py/FunctionalX/tests/_dashed_line.py",
		"/I/DEVELOP/FunctionalX.py/pylintrc",
		"/I/DEVELOP/FunctionalX.py/FunctionalX/src/lists/__init__.py",
		"/I/DEVELOP/FunctionalX.py/FunctionalX/LICENSE",
		"/I/DEVELOP/FunctionalX.py/FunctionalX/src/__init__.py",
		"/I/DEVELOP/FunctionalX.py/runtests.py",
		"/I/DEVELOP/FunctionalX.py/READMD.md",
		"/I/DEVELOP/FunctionalX.py/README.rst",
		"/I/DEVELOP/FunctionalX.py/README.md",
		"/I/DEVELOP/FunctionalPython/README.md",
		"/I/DEVELOP/FunctionalPython/src/FunctionalPython/setup.py",
		"/I/DEVELOP/FunctionalPython/src/FunctionalPython/src/list/cart2.py",
		"/I/DEVELOP/FunctionalPython/src/FunctionalPython/src/list/__init__.py",
		"/I/DEVELOP/FunctionalPython/src/FunctionalPython/__init__.py"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 117.0,
		"where_history":
		[
			"I:\\DEVELOP\\umol\\julia\\UMOL\\pkg\\PDB\\data\\VMD"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"FX.lists",
			"FX.append",
			"FX.tail",
			"FX.head",
			"FX.merge",
			"split",
			"root_parent",
			"cartn",
			"string_",
			"prefix",
			"M",
			"formated_strings",
			"string_cart2",
			"test_module",
			"local ",
			"name",
			"function_names",
			"module_names",
			"    \n",
			"parent",
			"prefix",
			"target_module_name",
			"hi",
			"ALLSPHINXOPTS",
			"doc)",
			"autodoc",
			"n",
			"50",
			"FunctionalPython",
			"numbers",
			"n_max",
			"n_min",
			"add_one_more",
			"0",
			"seq_gen",
			")",
			"seed_array",
			"new_index",
			"new_item",
			"index",
			"()",
			"tolower",
			"result",
			"ussername",
			"empty",
			"()\n",
			"train",
			"schoolSize",
			"urban",
			"publicSchool",
			"schoolHasLibrary",
			"minutesPerWeekEnglish",
			"read30MinsADay",
			"computerForSchoolwork",
			"englishAtHome",
			"motherBornUS",
			"train",
			"corel",
			"recitation2",
			"ProcterGamble",
			"CocaCola",
			"GE",
			"IBM",
			"purple",
			"ProcterGamble",
			"orange",
			"GE",
			"blue",
			"IBM",
			"CocaCola",
			"IBBM",
			"IBM",
			"summary",
			"IBM",
			"ProcterGamble",
			"CocaCola",
			"GE",
			"IBM",
			"CocaCola",
			"ProcterGamble",
			"GE",
			"IBM",
			"summary",
			"str",
			"13068",
			"1212",
			"18517",
			"1212",
			"2152",
			"Weekday",
			"Month",
			"Fat",
			"at",
			"Protein",
			"Sodium",
			"VitaminC",
			"Protein",
			"plot",
			"food",
			"reOOad",
			"read",
			"mean",
			"Over60",
			"Under15",
			"hello",
			"grid",
			"false",
			"println(\"--------------------------------------\")",
			"grid",
			"parallelogram",
			"0.7071067811865475",
			"high",
			"reverse",
			"coordinates",
			"Array",
			"distance",
			"geometric_center",
			"principal_axes",
			"PrincipalAxes",
			"geometric_rincenter",
			"geometric_center",
			"Array",
			"{AbstractFloat}",
			"Move",
			"Dict{Symbol,Residue}",
			"residue_dict",
			"convert_to_residue_dict",
			"dict"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\\IF\\s",
			"    "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/Steven/DEVELOP/FunctionalX.lua/src/test/test_directory/test_path/test_case.moon",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 372,
						"regions":
						{
						},
						"selection":
						[
							[
								261,
								261
							]
						],
						"settings":
						{
							"syntax": "Packages/Moonscripty/Syntaxes/MoonScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "FunctionalX.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 349.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
